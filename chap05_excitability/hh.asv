% This is a simple ode integrator for the HH equations
 
function hh
 
set(0,                           ...
   'defaultaxesfontsize', 20,   ...
   'defaultaxeslinewidth', 2.0, ...
   'defaultlinelinewidth', 2.0);

% set parameters
%p.Veq = 0; %is the original HH formulation
p.Veq = -65; % is the physiological formulation
p.Veq=0;
Tfact = 1; % this is the correction factor for temperatures other that 6.3C
%Tfact = 0.977 =273.15/279.45 % correspnds to 0C

%Tfact = 1.085 = 303.15/279.45 % corresponds to 30 C.
% to be correct, the temperature correction requires Veq=-65

p.gnabar = 120.;
p.gkbar = 36;
p.gl = 0.3;

Vna = 115;
Vk = -12;
Vl = 10.5988;
Tflist=[1,0.977,1.085];

for nTmps= 1:length(Tflist) % for a list of temperatures
%for nTmps = 1:1 % for one temperature
       Tfact=Tflist(nTmps);
p.Vna = Tfact*(Vna+p.Veq) - p.Veq;
p.Vk = Tfact*(Vk+p.Veq)-p.Veq;
p.Vl = Tfact*(Vl+p.Veq)-p.Veq;


% p.Inp   is the amplitude of the periodic input stimulus
 p.Inp = 0;

%p.Iapp is the amplitude of the steady current stimulus
%Pick one:
 p.Iapp = 120;
 p.Iapp = 20;
 p.Iapp = 0;
 
 % BCL is the Basic Cycle Length of the periodic input Inp
 %p.BCL = 39;
p.BCL = 0;



% initial data
 
V = 10.01+p.Veq;

m = 0.0529;
h = 0.5961;
n = 0.3177;
s0 = [V;m;h;n];

%specify the output points
tstep = .01;
if (p.Iapp>0)
    tend = 60;
else
    tend = 15;
end
 
tspan = [0:tstep:tend];

[T,S] = ode23(@(t,x)deRHS(t,x,p),tspan, s0, odeset('maxstep',1));  
V = S(:,1);
m = S(:,2);
h = S(:,3);
n = S(:,4);


% currents;
gna=p.gnabar*m.^3.*h;
 
gk=p.gkbar*n.^4;
Icl=p.gl*(V-p.Vl);
Ina=gna.*(V-p.Vna);
Ik=gk.*(V-p.Vk);

figure(1)
plot(T,V,'linewidth',2)
axis([0 tend -20+p.Veq 120+p.Veq])
xlabel('time (ms)','fontsize',20)
ylabel('V (mV)','fontsize',20)
formatSpecF = '%5.2f\n';
title(strcat('I_{app}= ',sprintf(formatSpecF,p.Iapp)),'fontsize',18)
 hold on
 
figure(2)
plot(T,m,'b',T,n,'r',T,h,'g',  'linewidth',2)
legend('m(t)','n(t)','h(t)','fontsize',16)
xlabel('time (ms)','fontsize',20)
ylabel('Gating variables','fontsize',20)
axis([0 tend 0 1])
 title(strcat('I_{app}= ',sprintf(formatSpecF,p.Iapp)),'fontsize',18)
 
 figure(3)
 plot(T, gk,T, gna)
xlabel('time (ms)')
ylabel('Conductance (mmho/cm^2)')
legend('g_K','g_{Na}')
 title(strcat('I_{app}= ',sprintf(formatSpecF,p.Iapp)),'fontsize',18)
end
 
figure(1)
hold off
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%the right hand side for the simulation:
function s_prime=deRHS(t,s,p)

%the original HH formulation has 
V = s(1)-p.Veq;
m = s(2);
h = s(3);
n = s(4);
 
Input = p.Inp/cosh(mod(t,p.BCL)-p.BCL/10) +p.Iapp;
 
AM=.1*(25.-V)./(exp(.1*(25.-V))-1.); % avoid V=25
BM=4.*exp(-V/18);
AH=.07*exp(-V/20.);
BH=1./(exp(.1*(30.-V))+1.);
AN=.01*(10.-V)./(exp(.1*(10.-V))-1.);% remark avoid V=10
BN=.125*exp(-V/80.);

Minf = AM./(AM+BM);



Fm=AM*(1.-m)-BM*m;
Fh=AH*(1.-h)-BH*h;
Fn=AN*(1.-n)-BN*n;
gna=p.gnabar*m.^3.*h;
gk=p.gkbar*n.^4;
Icl=p.gl*(V-p.Vl);

Fv = -gna*(V-p.Vna)-gk*(V-p.Vk)-Icl;

s_prime = [Fv+Input Fm Fh Fn]';

end

 
