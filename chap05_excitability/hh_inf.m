% Plot the steady state gating variables function hh_inf global gnabar gkbar Vna Vk Vl Inp Veq Tfact Iapp tstim BCL glset(0,                           ...   'defaultaxesfontsize', 20,   ...   'defaultaxeslinewidth', 2.0, ...   'defaultlinelinewidth', 2.0);Veq = 0; %is the original HH formulation%Veq = -65; % is the physiological formulationTfact = 1; % this is the correction factor for temperatures other that 6.3C%Tfact = 0.977 % correspnds to 0C%Tfact = 1.085 % corresponds to 30 C.gnabar = 120.;gkbar = 36;gl = 0.3; Vna = Tfact*(115+Veq) - Veq;Vk = Tfact*(-12+Veq)-Veq;Vl = Tfact*(10.5988+Veq)-Veq;vlist = linspace(Vk+0.01,Vna-0.01,100);gates=gate_de(vlist); for j = 1:3 taus(j,:) = 1./(gates(2*j-1,:)+gates(2*j,:)); infs(j,:) = gates(2*j-1,:).*taus(j,:);endfigure(1)plot(vlist,infs(1,:),'r',vlist,infs(2,:),'b',vlist,infs(3,:),'g')legend('m_\infty(v)','h_\infty(v)','n_\infty(v)')xlabel('Potential (ms)')figure(2)plot(vlist,taus(1,:),'r',vlist,taus(2,:),'b',vlist,taus(3,:),'g')legend('\tau_m(v)','\tau_h(v)','\tau_n(v)') xlabel('Potential (ms)') ylabel('ms')%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function gate = gate_de(V) % calculate the gating functions for V                 AM=.1*(25.-V)./(exp(2.5 -0.1*V)-1.);BM=4.*exp(-V/18.);AN=.01*(10.-V)./(exp(1.-0.1*V)-1.);BN=.125*exp(-V/80.);AH=.07*exp(-V/20.);BH=1./(exp(.1*(30.-V))+1.);AN=.01*(10.-V)./(exp(.1*(10.-V))-1.);BN=.125*exp(-V/80.);gate = [AM ;BM ;AH ;BH ;AN ;BN];  