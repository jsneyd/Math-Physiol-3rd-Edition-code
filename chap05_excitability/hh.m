% This is a simple ode integrator for the HH equations% it is set up to be easily modified to use for other dynamicsfunction hh global gnabar gkbar Vna Vk Vl Inp Veq Tfact Iapp tstim BCL glset(0,                           ...   'defaultaxesfontsize', 20,   ...   'defaultaxeslinewidth', 2.0, ...   'defaultlinelinewidth', 2.0);Veq = 0; %is the original HH formulation%Veq = -65; % is the physiological formulationTfact = 1; % this is the correction factor for temperatures other that 6.3C%Tfact = 0.977 % correspnds to 0C%Tfact = 1.085 % corresponds to 30 C.gnabar = 120.;gkbar = 36;gl = 0.3; Vna = Tfact*(115+Veq) - Veq;Vk = Tfact*(-12+Veq)-Veq;Vl = Tfact*(10.5988+Veq)-Veq;tstep = .1;rn0 = 0.8;tstim = 0.005;  %This is the length of time of an initial stimulus%Inp = 3.47;  % this is the amplitude of the initial input stimulus%Inp = 3.5;%Inp = 13.4;Inp = 0;%Iapp =7;  %this is the amplitude of the steady current stimulus Iapp = 120; Iapp = 0;%BCL = 39;BCL = 0;tstep = .01;t_end = 20 ;% initial dataV = 6.5098;  %The voltage thresholdV = 7;%V = Veq;m = 0.0529;h = 0.5961;n = 0.3177;%specify the output pointstspan = [0:tstep:t_end];s0 = [V;m;h;n];[T,S] = ode23(@deRHS,tspan, s0, odeset('maxstep',1));  V = S(:,1);m = S(:,2);h = S(:,3);n = S(:,4);% currents;gna=gnabar*m.^3.*h; gk=gkbar*n.^4;Icl=gl*(V-Vl);Ina=gna.*(V-Vna);Ik=gk.*(V-Vk);figure(4)plot( Ina,Ik,'linewidth',2)xlabel('I_{Na}')ylabel('I_K')  % figure(3)% plot(n,h,'linewidth',2)% xlabel('n','fontsize',20)% ylabel('h','fontsize',20)figure(1)plot(T,V,'linewidth',2)axis([0 t_end -20 120])xlabel('time (ms)','fontsize',20)ylabel('Potential (mV)','fontsize',20)figure(2)plot(T,m,'b',T,n,'r',T,h,'g',  'linewidth',2)legend('m(t)','n(t)','h(t)','fontsize',16)xlabel('time (ms)','fontsize',20)ylabel('Gating variables','fontsize',20)axis([0 t_end 0 1])  figure(3) plot(T, gk,T, gna)xlabel('time (ms)')ylabel('Conductance (mmho/cm^2)')legend('g_K','g_{Na}')end%the right hand side for the simulation:function s_prime=deRHS(t,s)global gnabar gkbar Vna Vk Vl Inp Veq   Iapp tstim BCL gl %the original HH formulation has V = s(1)-Veq;m = s(2);h = s(3);n = s(4); Input = Inp/cosh(mod(t,BCL)-BCL/10) +Iapp AM=.1*(25.-V)./(exp(.1*(25.-V))-1.);BM=4.*exp(-V/18);AH=.07*exp(-V/20.);BH=1./(exp(.1*(30.-V))+1.);AN=.01*(10.-V)./(exp(.1*(10.-V))-1.);BN=.125*exp(-V/80.);Minf = AM./(AM+BM);Fm=AM*(1.-m)-BM*m;Fh=AH*(1.-h)-BH*h;Fn=AN*(1.-n)-BN*n;gna=gnabar*m.^3.*h;%gnainf=gnabar*Minf.^3.*h;gk=gkbar*n.^4;Icl=gl*(V-Vl);Fv = -gna*(V-Vna)-gk*(V-Vk)-Icl;s_prime = [Fv+Input Fm Fh Fn]';end 