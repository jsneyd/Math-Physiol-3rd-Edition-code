%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%   Beeler and Reuter's model defined in Keener's Mathematical Physiology   %%   pp. ??                                                            %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%                                                                           %%  The vector S = [ V m h j d f x Cai] contains                             %%  V (the membrane potential), m, h, j, d, f, x  gating variables and Cai   %%  internal Calcium.                                                        %%                                                                           %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%close allclear allclcglobal ENa EK CKi CKe RTbyF t_end gNa0 gK0  gK10 set(0,                           ...   'defaultaxesfontsize', 20,   ...   'defaultaxeslinewidth', 1.0, ...   'defaultlinelinewidth', 1.2, ...   'defaultpatchlinewidth', 0.7);% set concentrationsRTbyF = 25.8;  % mVF = 96485.;  % Faraday constant  Coulombs/molCNai = 50;      % mMCNae = 457;     % mMCKi = 397;      % mMCKe = 20;       % mM%CKe = 29; %elevated potassium concentration shows oscillations% The reversal potentials (mV).ENa = RTbyF*log(CNae/CNai);  % sodium Nernst potentialEK = RTbyF*log(CKe/CKi);  % potassium Nernst potentialENa = 50;  % for br% conductancesgNa0 = 4;gK0 = 0.8;gK10 = 0.35;% Steady state intial condition:s0=[ -84.5738,	0.011,	0.9877 ,	0.9748,	0.003,	1,	0.0056,	0.0000001782];t_end = 2000;tspan = [1: 1:t_end];[T,S] = ode23s(@BRode,tspan, s0, odeset('maxstep',1));  V = S(:,1);m = S(:,2);h = S(:,3);j = S(:,4);d = S(:,5);f = S(:,6);x = S(:,7);Ca = S(:,8);  figure(1);                          subplot(2,2,1),plot(T,S(:,1),'linewidth',2),xlabel('time(ms)','linewidth',2); ylabel('V');           subplot(2,2,2),plot(T,S(:,2),'linewidth',2),xlabel('time(ms)','linewidth',2); ylabel('m');           subplot(2,2,3),plot(T,S(:,3),'linewidth',2),xlabel('time(ms)','linewidth',2); ylabel('h');           subplot(2,2,4),plot(T,S(:,4),'linewidth',2),xlabel('time(ms)','linewidth',2); ylabel('j');         figure(2)     subplot(2,2,1),plot(T,S(:,5),'linewidth',2),xlabel('time(ms)','linewidth',2); ylabel('d');           subplot(2,2,2),plot(T,S(:,6),'linewidth',2),xlabel('time(ms)','linewidth',2); ylabel('f');           subplot(2,2,3),plot(T,S(:,7),'linewidth',2),xlabel('time(ms)','linewidth',2); ylabel('x');         subplot(2,2,4),plot(T,S(:,8),'linewidth',2),xlabel('time(ms)','linewidth',2); ylabel('Cai');   for j = 1:length(T)      currents= IV(S(j,:));      INa(j) = currents(1);      IK(j) = currents(2);      Ix(j) = currents(3);      Is(j) = currents(4); end figure(3);    subplot(2,1,1);    plot(T,IK,'r',T,Ix,'b',T,Is,'m','linewidth',2);    xlabel('time(ms)');    ylabel('IK,Ix,Is');    legend('IK','Ix','Is')    subplot(2,1,2);    plot(T,INa,'g','linewidth',2);    xlabel('time(ms)');    ylabel('INa'); %%function s_prime=BRode(t,s)global t_endV    = s(1); m    = s(2);h    = s(3);j    = s(4);d    = s(5);f    = s(6);x    = s(7);Cai  = s(8);gate = [m, h, j, d, f, x];  % the gating variables%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% the gating variable dynamicsAM=(V+47)/(-exp(-0.1*(V+47))+1);BM=40*exp(-0.056*(V+72));AH=0.126*exp(-0.25*(V+77));  %should be 77BH=1.7/(exp(-0.082*(V+22.5))+1);AJ=0.055*exp(-0.25*(V+78))/(exp(-0.2*(V+78))+1);%should be 78, not 58BJ=0.3./(exp(-0.1*(V+32))+1);AD=0.095*exp(-0.01*(V-5))./(exp(-0.072*(V-5))+1);BD=0.07*exp(-0.017*(V+44))./(exp(0.05*(V+44))+1);AF=0.012*exp(-0.008*(V+28))./(exp(0.15*(V+28))+1);BF=0.0065*exp(-0.02*(V+30))./(exp(-0.2*(V+30))+1);AX=0.0005*exp(0.083*(V+50))./(exp(0.057*(V+50))+1);BX=0.0013*exp(-0.06*(V+20))./(exp(-0.04*(V+20))+1);% for y = m, h, j, d, f, x %  A = [a_m, a_h, a_j, a_d, a_f, a_x];%  B = [b_m, b_h, b_j, b_d, b_f, b_x];A = [AM, AH, AJ, AD, AF, AX];B = [BM, BH, BJ, BD, BF, BX];Inf = A./(A+B);                        %    y_inf = a_y/(a_y + b_y);% m = Inf(1);Tau = 1./(A+B);                        %    t_y  = 1/(a_y + b_y);% Membrane capacitance (micro-Farads/cm^2)C_m = 1; % % Exterior stimulus% only turn on the applied currrent for a short time.BCL = 1000; if (mod(t,BCL)>10&mod(t,BCL)<15)I = 10; elseI = 0;endcurrents = IV(s);INa = currents(1);IK = currents(2);Ix = currents(3);Is = currents(4);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% The derivatives of V, m, h, j, d, f and x with Cai as well.  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%V_prime  = -(INa + IK + Ix + Is - I)/C_m; %  gate_prime = (Inf - gate)./Tau;   gate_prime = A.*(1-gate)-B.*gate;Cai_prime = 0.07*(10^(-7) - Cai) - 10^(-7)* Is;s_prime = [V_prime gate_prime Cai_prime]';end%%function currents= IV(s)global ENa EK  CKi CKe RTbyF gNa0 gK0  gK10V    = s(1); m    = s(2);h    = s(3);j    = s(4);d    = s(5);f    = s(6);x    = s(7);Cai  = s(8);g_Na = gNa0*m^3*h*j+0.003;                % Na+ conductanceEk1=EK;% sodium equilibrium potential% CurrentsINa = g_Na*(V-ENa);  %sodium current%  % the Ix currentIx  = 0.8*x*(exp(0.04*(V+77))-1)/exp(0.04*(V+35));% Ix = 0.0084*1.286 *x* (CKi-CKe*exp(-V/25)); %this is the DN current, almost identical%the Ik1 currentIK1= 1.4*(exp(0.04*(V+85))-1)/(exp(0.08*(V+53))+exp(0.04*(V+53))) ...+0.07*(V+23)/(1-exp(-0.04*(V+23)));  % the BR currentIK = IK1  ;Esi = -82.3-13.0287*log( Cai);Is  = 0.09*d*f*(V-Esi);currents = [INa IK Ix Is];   end