%determine stability for the FHN cable equation with pl f(v)
set(0,                           ...
   'defaultaxesfontsize', 20,   ...
   'defaultaxeslinewidth', 1.0, ...
   'defaultlinelinewidth', 2.0);
%parameters
eps=0.1;
gam = 0.1;
alp  = 0.15;
% valid only if alf< (1+gam)/4
(1+gam)/4
Ic = 1;
lam = sqrt(1+1/gam);
eta = sqrt(1/gam-1);

v0=alp/(1+gam);
v1=(alp-gam/2)/(1-gam);
%region 1
Imx = lam*(1/4-v0);

I=[0:.01:Imx];
vmx = v0+I/lam;
 
%region 2

A=(-4*v1 + 1)*eta  - 4*(v0 - 1/4)*lam;
B= (8*v1 - 6)*eta;
C=4*(v0 - 1/4)*lam +(1- 4*v1)*eta;

D=sqrt(B^2-4*A*C);
Elim=(-B+D)/(2*A);
xlim=log(Elim)/eta;

mu =[-1:.01:0.5];  %mu is the proposed eigenvalue
 
lamm =sqrt(1-mu);
etam=sqrt(1+mu);
  x1 = atan(etam./lamm)./lamm;
%x1=[0:.001:xlim]; 

ndx = find(x1<=xlim);
 %Find I vs. x1:
E=exp(eta*x1);
I = ((-4*v0 + 1)*lam + (-4*v1 + 1)*eta).*E/8 + ((-4*v0 + 1)*lam + eta*(4*v1 - 1))./(8*E);
 
b = -(4*I./E + 4*v1*eta - eta)./(4*(E + 1./E)*eta); 
c = (4*I.*E - 4*v1*eta + eta)./(4*(E + 1./E)*eta);
V0 = v1+b+c;

 
%P=((-4*v1 + 1)*eta  - 4*(v0 - 1/4)*lam)*E.^2 + (8*v1 - 6)*eta*E   + 4*(v0 - 1/4)*lam +(1- 4*v1)*eta;
  figure(1)
  plot(I(ndx),x1(ndx) )
 hold on

figure(2)
plot(I(ndx),mu(ndx))
xlabel('I')
ylabel('\mu')
hold on
 
% figure(1)
% plot(I,V0)
% xlabel('I')
% ylabel('v(0)')

%region 3
x1=[xlim:0.01:2];
E1=exp(eta*x1);
fac=(-4*v1*eta - sqrt(16*v0^2*lam^2 - 8*v0*lam^2 - 16*v1*eta^2 + lam^2 + 8*eta^2) + 3*eta)/(4*v0*lam - 4*v1*eta - lam + eta)
E2=fac*E1;
x2=log(E2)/eta;
 figure(3)
  plot(x1,x2)
 E3=exp(lam*x2);
 v2=(gam+alp)/(gam+1);

  
 % Find I
 v2fac=-4*lam*( E1.^2./E2 - E2).*(E3 - 1./E3);
 v1fac = -4*eta*( E1.^2./E2 - 2*E1  + E2).*(E3 + 1./E3);
E1sqfac = 3* (E3*lam + E3*eta - lam./E3  + eta./E3 )./E2;
E1fac= -2 *eta*(E3 + 1./E3);
E10fac=-3*E2.*(E3*lam - E3*eta - lam./E3 -  eta./E3);
denom=8*(E1.^2./E2 - E2);
I=(v2*v2fac+v1*v1fac+E1.^2.*(E1sqfac) +E1.*E1fac+E10fac)./denom;
    
figure(1)
plot(I,x1,I,x2)
xlabel('I')
axis([0 10 0 2])
box off
text(5, 1.5, 'x_1','fontsize',18)
text(5,0.5,'x_2','fontsize',18)
hold off

clear eig 
length(x1)
for j = 1:length(x1)
    X1=x1(j);
    X2=x2(j);
 eig(j) = schrod(X1,X2);
end
 

figure(2)
plot(I,eig,'--',Ic,eps*gam,'*')


 function eig = schrod(x1,x2)
 
% guess a lower bound
a = -1;

% guess an upper bound
b = 0.99;

%this is the answer - call the function bisect(a,b,@fval)

eig= bisect(a,b,x1,x2,@fval);

 end
function root = bisect(a,b,x1,x2,feval)

ul = a;
fl = feval(ul,x1,x2);
uu = b;
fu = feval(uu,x1,x2);

% we make the assumption, without checking, that 
% fu*fl<0

% if not, the algoritm fails to find a root.

N = 20;  % number of iterates
% the main bisection algorithm
for j = 1:N
uc = (ul+uu)/2;
fc = feval(uc,x1,x2);
ftest = (fc.*fl>0);
ul = ftest.*uc+(1-ftest).*ul;
fl = ftest.*fc + (1-ftest).*fl;

uu = (1-ftest).*uc+ ftest.*uu;
fu = (1-ftest).*fc + ftest.*fu;
end
root = uc;

end
%given x1 and x2 find eta by bisection
function f=fval(mu,x1,x2)
 
lam =sqrt(1-mu);
eta=sqrt(1+mu);
E=exp(eta*x2);
  f=E.*(cos(lam*x2) .*sin(lam*x1).*(eta.^2-lam.^2) ...
      + 2*cos(lam*x2) .*cos(lam*x1).*eta.*lam ...
      + sin(lam*x2) .*cos(lam*x1).*(lam.^2-eta.^2)) ...
      + (sin(lam*x2) .*cos(lam*x1).*(eta.^2+lam.^2) ...
      - cos(lam*x2) .*sin(lam*x1).*(eta.^2+lam.^2) ...
      + 2*sin(lam*x2) .*sin(lam*x1).*eta.*lam)./E;

end

